<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:mahappsControls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
	xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing"
	xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
	xmlns:wpf="clr-namespace:Gwupe.Agent.UI.WPF"
	xmlns:utils="clr-namespace:Gwupe.Agent.UI.WPF.Utils"
	xmlns:system="clr-namespace:System;assembly=mscorlib">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
        <ResourceDictionary Source="Theme.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <utils:StarRatingConverter x:Key="starRatingConverter" />
    <utils:ImageStreamReader x:Key="avatarImageStreamReader"   DefaultImageUri="pack://application:,,,/ui/wpf/Images/silhoette.png" />
    <!-- Resource dictionary entries should be defined here. -->
    <Style x:Key="WindowStyle" TargetType="Window">
        <Setter Property="Width" Value="826"  />
        <Setter Property="Height" Value="480"  />
        <Setter Property="MinWidth" Value="640"  />
        <Setter Property="MinHeight" Value="480"  />
    </Style>
    <Style x:Key="MainLayout" TargetType="Grid">
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="Background" Value="Red" />
    </Style>
    <Style x:Key="ScorecardStarEmpty" TargetType="ed:RegularPolygon">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="InnerRadius" Value="0.47211"  />
        <Setter Property="PointCount" Value="5"  />
        <Setter Property="Stretch" Value="Fill"  />
        <Setter Property="Width" Value="13"  />
        <Setter Property="Stroke" Value="#FFFFFB88"  />
        <Setter Property="Height" Value="13"/>
    </Style>
    <Style x:Key="ScorecardStarFull" TargetType="ed:RegularPolygon" BasedOn="{StaticResource ScorecardStarEmpty}">
        <Setter Property="Fill" Value="#FFFFFB88" />
    </Style>
    <Style x:Key="PersonBorder" TargetType="Border">
        <Setter Property="CornerRadius" Value="6" />
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderThickness" Value="1,1,1,1"  />
        <Setter Property="Padding" Value="5" />
    </Style>
    <Style x:Key="InfoLabel" TargetType="Label">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Width" Value="65" />
    </Style>
    <Style x:Key="InfoContent" TargetType="Label">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Margin" Value="75,0,0,0" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <Style x:Key="NoticeText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}" />
        <Setter Property="FontSize" Value="{DynamicResource HeaderFontSize}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FontWeight" Value="Bold" />
    </Style>

    <!-- Style to make a button border transparent and mouseover raise -->
    <Style TargetType="{x:Type Border}" x:Key="TransparentButtonBorderStyle">
        <Setter Property="Background" Value="Transparent" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Gray" />
                <Setter Property="BorderThickness" Value="1" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- the Template containing the image we use for cancel -->
    <DataTemplate x:Key="CancelButtonImage">
        <Image Source="/Gwupe.Agent;component/UI/WPF/Images/smallcross.png" Width="16" Height="16" />
    </DataTemplate>

    <!-- the Template containing the image we use for accept -->
    <DataTemplate x:Key="AcceptButtonImage">
        <Image Source="/Gwupe.Agent;component/UI/WPF/Images/smalltick.png" Width="16" Height="16" />
    </DataTemplate>

    <!-- Template for a cancel button -->
    <DataTemplate x:Key="CancelButtonTemplate">
        <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                <Border CornerRadius="3" Style="{StaticResource TransparentButtonBorderStyle}" >
                    <ContentPresenter ContentTemplate="{StaticResource CancelButtonImage}" />
                </Border>
            </StackPanel>
        </Grid>
    </DataTemplate>

    <!-- Template for a Accept button -->
    <DataTemplate x:Key="AcceptButtonTemplate">
        <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                <Border CornerRadius="3" Style="{StaticResource TransparentButtonBorderStyle}" >
                    <ContentPresenter ContentTemplate="{StaticResource AcceptButtonImage}" />
                </Border>
            </StackPanel>
        </Grid>
    </DataTemplate>

    <!-- Style for a Generic Yes/No Button -->
    <Style TargetType="{x:Type Button}" x:Key="YesNoButtonStyle">
        <Setter Property="Height" Value="18" />
        <Setter Property="Width" Value="18" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <!-- This part makes it have no border -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}" >
                    <ContentPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style for a Tick Yes Button -->
    <Style x:Key="AcceptButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource YesNoButtonStyle}">
        <Setter Property="ContentTemplate" Value="{DynamicResource AcceptButtonTemplate}" />
        <Setter Property="ToolTip" Value="Accept" />
    </Style>

    <!-- Style for the Tick Yes Button with a Command -->
    <Style x:Key="AcceptButtonCommandStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource AcceptButtonStyle}">
        <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataContext.AnswerHandler.AnswerTrueFalse}" />
        <Setter Property="CommandParameter">
            <Setter.Value>
                <system:Boolean>True</system:Boolean>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style for the Cross No Button -->
    <Style x:Key="CancelButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource YesNoButtonStyle}">
        <Setter Property="ContentTemplate" Value="{DynamicResource CancelButtonTemplate}" />
        <Setter Property="ToolTip" Value="Cancel" />
    </Style>
    
    <!-- Style for the Cross No Button -->
    <Style x:Key="CancelButtonCommandStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource CancelButtonStyle}">
        <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataContext.AnswerHandler.AnswerTrueFalse}" />
        <Setter Property="CommandParameter">
            <Setter.Value>
                <system:Boolean>False</system:Boolean>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Template for Logging In -->
    <DataTemplate x:Key="LoggingInWindow" DataType="wpf:DashboardDataContext">
        <Grid>
            <Grid Background="White" Opacity="0.6" />
            <Grid HorizontalAlignment="Center" VerticalAlignment="Center" Width="300" Height="300">
                <mahappsControls:ProgressRing Name="LoginProgress" IsActive="True" Margin="0,-50,0,0" Height="125" Width="125" />
                <TextBlock Style="{StaticResource NoticeText}"  Margin="0,0,0,-150">Logging In</TextBlock>
            </Grid>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="SigningUpWindow" DataType="wpf:DashboardDataContext">
        <Grid>
            <Grid Background="White" Opacity="0.6" />
            <Grid HorizontalAlignment="Center" VerticalAlignment="Center" Width="300" Height="300">
                <mahappsControls:ProgressRing Name="SignupProgress" IsActive="True" Margin="0,-50,0,0" Height="125" Width="125" />
                <TextBlock Style="{StaticResource NoticeText}"  Margin="0,0,0,-150">Signing Up</TextBlock>
            </Grid>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="InitializingWindow" DataType="wpf:DashboardDataContext">
        <Grid>
            <Grid Background="White" Opacity="0.6" />
            <Grid HorizontalAlignment="Center" VerticalAlignment="Center" Width="300" Height="300">
                <mahappsControls:ProgressRing Name="InitializationProgress" IsActive="True" Margin="0,-50,0,0" Height="125" Width="125" />
                <TextBlock Style="{StaticResource NoticeText}" Margin="0,0,0,-150">Initializing</TextBlock>
            </Grid>
        </Grid>
    </DataTemplate>
	<DataTemplate x:Key="DisablingWindow">
		<Grid>
			<Grid Background="White" Opacity="0.55"></Grid>
			<mahappsControls:ProgressRing Name="SignupProgress" IsActive="True" Margin="0,0,0,0" Height="100" Width="100" HorizontalAlignment="Center" VerticalAlignment="Center" />
			<TextBlock Name="DisableText" Text="{Binding Path=DisableMessage, FallbackValue=Whirring}" HorizontalAlignment="Center" VerticalAlignment="Center" FontWeight="Bold" Foreground="#FF2B519B" FontSize="14.667" />
		</Grid>
	</DataTemplate>
		<DataTemplate x:Key="SearchingWindow">
		<Grid>
			<Grid Background="White" Opacity="0.55"></Grid>
			<mahappsControls:ProgressRing Name="SignupProgress" IsActive="True" Margin="0,0,0,0" Height="150" Width="150" HorizontalAlignment="Center" VerticalAlignment="Center" />
			<TextBlock Name="DisableText" Text="Searching" HorizontalAlignment="Center" VerticalAlignment="Center" FontWeight="Bold" Foreground="#FF2B519B" FontSize="23" />
		</Grid>
	</DataTemplate>
</ResourceDictionary>