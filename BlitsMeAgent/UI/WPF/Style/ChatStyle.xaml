<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing"
	xmlns:Utils="clr-namespace:Gwupe.Agent.UI.WPF.Utils" 
	xmlns:chat="clr-namespace:Gwupe.Agent.Components.Functions.Chat.ChatElement" 
	xmlns:filesend="clr-namespace:Gwupe.Agent.Components.Functions.FileSend.ChatElement" 
	xmlns:rdp="clr-namespace:Gwupe.Agent.Components.Functions.RemoteDesktop.ChatElement" 
    xmlns:notification="clr-namespace:Gwupe.Agent.Components.Notification"
	xmlns:engage="clr-namespace:Gwupe.Agent.UI.WPF.Engage" 
    xmlns:s="clr-namespace:System;assembly=mscorlib">

    <!-- Resource dictionary entries should be defined here. -->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="RosterStyle.xaml" />
        <ResourceDictionary Source="Style.xaml" />
        <ResourceDictionary Source="Theme.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- this is our start of the clean up -->

    <!-- Helper Objects -->
    <!-- Reads a binary stream and builds an image -->
    <Utils:ImageStreamReader x:Key="avatarImageStreamReader"  DefaultImageUri="pack://application:,,,/ui/wpf/Images/silhoette.png" />
    <!-- Makes a date/time human friendly -->
    <Utils:RelativeMessageTimeConverter x:Key="relativeMessageTimeConverter" />
    <!-- Converts boolean to a visibility true=>Visible false=>Collapsed -->
    <Utils:BoolToVisibilityConverter x:Key="BoolToVisConverter" />
    <!-- Converts boolean to a visibility true=>Visible false=>Collapsed -->
    <Utils:BoolToInvisibilityConverter x:Key="BoolToInvisConverter" />


    <!-- Core Styles -->

    <!-- The style for a timestamp on a message -->
    <Style x:Key="MessageTimeStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Height" Value="14" />
        <Setter Property="FontStyle" Value="Italic" />
        <Setter Property="Foreground" Value="#FF858282" />
        <Setter Property="FontFamily" Value="Calibri" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <!-- Selectable Text for use in chat messages (must be referenced as a StaticResource) -->
    <Style x:Key="MessageTextbox" TargetType="TextBox">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="MinWidth" Value="100" />
        <!-- This prevents the border from being drawn -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border x:Name="PART_ContentHost" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Base style for the border which shapes the message bubble -->
    <Style TargetType="Border" x:Key="BaseMessageBorderStyle">
        <Setter Property="CornerRadius" Value="15" />
        <Setter Property="MinHeight" Value="40" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Width" Value="Auto" />
    </Style>

    <!-- Self border style for a message bubble from me -->
    <Style TargetType="Border" x:Key="SelfMessageBorderStyle" BasedOn="{StaticResource BaseMessageBorderStyle}">
        <Setter Property="Background" Value="#b6d973" />
        <Setter Property="Margin" Value="30,0,8.3,5" />
    </Style>

    <!-- Self border style for a message bubble from me -->
    <Style TargetType="Border" x:Key="TargetMessageBorderStyle" BasedOn="{StaticResource BaseMessageBorderStyle}">
        <Setter Property="Background" Value="#FF7CB0EE" />
        <Setter Property="Margin" Value="8.3,0,30,5" />
    </Style>

    <!-- System border style for a message bubble from system -->
    <Style TargetType="Border" x:Key="SystemMessageBorderStyle" BasedOn="{StaticResource BaseMessageBorderStyle}">
        <Setter Property="Background" Value="#C6D9F1" />
        <Setter Property="Margin" Value="40,0,40,5" />
    </Style>

    <!-- System border style for a error message bubble from system -->
    <Style TargetType="Border" x:Key="ErrorMessageBorderStyle" BasedOn="{StaticResource BaseMessageBorderStyle}">
        <Setter Property="Background" Value="#FFFF5050" />
        <Setter Property="Margin" Value="40,0,40,5" />
    </Style>

    <!-- Border for Images in a message bubble -->
    <Style TargetType="Border" x:Key="AvatarBorderStyle">
        <Setter Property="Height" Value="30" />
        <Setter Property="Width" Value="30" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="White" />
    </Style>



    <!-- Base Style for Image Buttons -->
    <Style x:Key="NotificationActionButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="White" />
        <Setter Property="HorizontalAlignment" Value="Right" />
    </Style>


	<!-- Style for the text associated with service items -->
    <Style x:Key="ServiceCompleteText" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>

	<!-- Style for the rich text on the thank you for supporting page -->
    <Style x:Key="ServiceCompleteRichText" TargetType="RichTextBox">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="BorderThickness" Value="0" />
    </Style>

	<!-- Style for displaying a chat icon -->
	<Style x:Key="ChatPersonIconStyle" TargetType="Rectangle">
		<Setter Property="Width" Value="30" />
		<Setter Property="Height" Value="30" />
		<Setter Property="StrokeThickness" Value="0" />
		<Setter Property="VerticalAlignment" Value="center" />
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="Margin" Value="0" />
		<Setter Property="Fill">
			<Setter.Value>
                <ImageBrush Stretch="Uniform" ImageSource="{Binding Path=Avatar, Converter={StaticResource avatarImageStreamReader}}" />
			</Setter.Value>
		</Setter>
	</Style>

    <!-- Data Templates for Elements -->

    <!-- Template for Showing the time of a message -->
    <DataTemplate x:Key="ChatDateTime">
        <TextBlock Style="{DynamicResource MessageTimeStyle}" 
			Text="{Binding SpeakTime, Converter={StaticResource relativeMessageTimeConverter}, FallbackValue=Yesterday 8:49}"
		 />
    </DataTemplate>

    <!-- Template for the actual message -->
    <DataTemplate x:Key="ChatMessage">
        <TextBox Style="{StaticResource MessageTextbox}" 
             Text="{Binding Path=Message, Mode=OneWay}">
        </TextBox>
    </DataTemplate>

    <!-- Template used for displaying a message from me -->
    <DataTemplate DataType="{x:Type chat:SelfChatElement}" >
        <Grid>
            <Border Style="{StaticResource SelfMessageBorderStyle}">
                <DockPanel Background="Transparent" LastChildFill="True"  >
                    <Rectangle Margin="5,0,10,0" DockPanel.Dock="Right" Style="{StaticResource ChatPersonIconStyle}"/>
                    <ContentPresenter Margin="10,0,0,0" DockPanel.Dock="Right" ContentTemplate="{StaticResource ChatDateTime}" DataContext="{Binding}" />
                    <ContentPresenter Margin="10,5,0,7" DockPanel.Dock="Left" ContentTemplate="{StaticResource ChatMessage}" DataContext="{Binding}" />
                </DockPanel>
            </Border>
            <Image Visibility="{Binding Path=LastWord, Converter={StaticResource BoolToVisConverter}}" Panel.ZIndex="-1" Source="../Images/GreenSpeech.png" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="15" Margin="0,0,0,2.5"  />
            <Image Visibility="{Binding Path=LastWord, Converter={StaticResource BoolToInvisConverter}}" Source="../Images/GreenJoin.png" VerticalAlignment="Bottom" HorizontalAlignment="Right" Height="5" Margin="0,0,25,0" />
        </Grid>
    </DataTemplate>

    <!-- Template for the chat bubble from the second party -->
    <DataTemplate  DataType="{x:Type chat:TargetChatElement}">
        <Grid>
            <Border Style="{StaticResource TargetMessageBorderStyle}">
                <DockPanel Background="Transparent" LastChildFill="True"  >
                    <Rectangle Margin="10,0,5,0" DockPanel.Dock="Left" Style="{StaticResource ChatPersonIconStyle}"/>
                    <ContentPresenter Margin="0,0,10,0" DockPanel.Dock="Left" ContentTemplate="{StaticResource ChatDateTime}" DataContext="{Binding}" />
                    <ContentPresenter Margin="0,5,10,7" DockPanel.Dock="Right" ContentTemplate="{StaticResource ChatMessage}" DataContext="{Binding}" />
                </DockPanel>
            </Border>
            <Image Visibility="{Binding Path=LastWord, Converter={StaticResource BoolToVisConverter}}" Panel.ZIndex="-1" Source="../Images/BlueSpeech.png" Width="15" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="0,0,0,2.25" />
            <Image Visibility="{Binding Path=LastWord, Converter={StaticResource BoolToInvisConverter}}" Source="../Images/BlueJoin.png" VerticalAlignment="Bottom" HorizontalAlignment="Left" Height="5" Margin="25,0,0,0" />
        </Grid>
    </DataTemplate>

    <!-- Template used for displaying a message from system theirs or ours -->
    <DataTemplate x:Key="GenericSystemChatElementTemplate" >
        <Grid>
            <Border Style="{StaticResource SystemMessageBorderStyle}">
                <DockPanel Background="Transparent" LastChildFill="True"  >
                    <ContentPresenter Margin="10,0,10,0" DockPanel.Dock="Right" ContentTemplate="{StaticResource ChatDateTime}" DataContext="{Binding}" />
                    <ContentPresenter Margin="10,5,0,7" DockPanel.Dock="Left" ContentTemplate="{StaticResource ChatMessage}" DataContext="{Binding}" />
                </DockPanel>
            </Border>
        </Grid>
    </DataTemplate>

    <!-- Template used for displaying a message from system -->
    <DataTemplate DataType="{x:Type chat:SystemChatElement}">
        <ContentPresenter ContentTemplate="{StaticResource GenericSystemChatElementTemplate}" />
    </DataTemplate>

    <!-- Template used for displaying a message from their system -->
    <DataTemplate DataType="{x:Type chat:TargetSystemChatElement}">
        <ContentPresenter ContentTemplate="{StaticResource GenericSystemChatElementTemplate}" />
    </DataTemplate>

    <!-- Template used for displaying error message in chat -->
    <DataTemplate DataType="{x:Type chat:SystemErrorElement}">
        <Grid>
            <Border Style="{StaticResource ErrorMessageBorderStyle}">
                <DockPanel Background="Transparent" LastChildFill="True"  >
                    <ContentPresenter Margin="10,0,10,0" DockPanel.Dock="Right" ContentTemplate="{StaticResource ChatDateTime}" DataContext="{Binding}" />
                    <ContentPresenter Margin="10,5,0,7" DockPanel.Dock="Left" ContentTemplate="{StaticResource ChatMessage}" DataContext="{Binding}" />
                </DockPanel>
            </Border>
        </Grid>
    </DataTemplate>

    <!-- Template used for displaying a unattended rdp request -->
    <DataTemplate DataType="{x:Type rdp:RdpRequestUnattendedChatElement}" >
        <Grid>
            <Border Style="{StaticResource SystemMessageBorderStyle}">
                <DockPanel Background="Transparent" LastChildFill="True"  >
                    <ContentPresenter Margin="10,0,10,0" DockPanel.Dock="Right" ContentTemplate="{StaticResource ChatDateTime}" DataContext="{Binding}" />
                    <StackPanel Margin="10,0,0,0" DockPanel.Dock="Right" Orientation="Horizontal" Visibility="{Binding IsAnswered, Converter={StaticResource BoolToInvisConverter}}">
                        <StackPanel Orientation="Vertical" VerticalAlignment="Bottom">
                            <Button Style="{StaticResource AcceptButtonCommandStyle}" />
                            <TextBlock Text="{Binding Timeout, FallbackValue=30}"  HorizontalAlignment="Center" FontSize="10" Height="14" VerticalAlignment="Top" />
                        </StackPanel>
                        <StackPanel Orientation="Vertical" VerticalAlignment="Bottom">
							<Button Style="{StaticResource CancelButtonCommandStyle}" />
                            <TextBlock Text=""  HorizontalAlignment="Center" FontSize="10" Height="14" VerticalAlignment="Top" />
                        </StackPanel>
                    </StackPanel>
                    <ContentPresenter Margin="10,5,0,7" DockPanel.Dock="Left" ContentTemplate="{StaticResource ChatMessage}" DataContext="{Binding}" />
                </DockPanel>
            </Border>
        </Grid>
    </DataTemplate>

    <!-- Template used for displaying a rdp request -->
    <DataTemplate DataType="{x:Type rdp:RdpRequestChatElement}" >
        <Grid>
            <Border Style="{StaticResource SystemMessageBorderStyle}">
                <DockPanel Background="Transparent" LastChildFill="True"  >
                    <ContentPresenter Margin="10,0,10,0" DockPanel.Dock="Right" ContentTemplate="{StaticResource ChatDateTime}" DataContext="{Binding}" />
                    <StackPanel Margin="10,0,0,0" DockPanel.Dock="Right" Orientation="Horizontal" Visibility="{Binding IsAnswered, Converter={StaticResource BoolToInvisConverter}}">
                        <Button Style="{StaticResource AcceptButtonCommandStyle}" />
						<Button Style="{StaticResource CancelButtonCommandStyle}" />
                    </StackPanel>
                    <ContentPresenter Margin="10,5,0,7" DockPanel.Dock="Left" ContentTemplate="{StaticResource ChatMessage}" DataContext="{Binding}" />
                </DockPanel>
            </Border>
        </Grid>
	</DataTemplate>

	<!-- Template for showing a file send request -->
    <DataTemplate DataType="{x:Type filesend:FileSendRequestChatElement}">
        <Grid>
            <Border Style="{StaticResource SystemMessageBorderStyle}">
                <DockPanel Background="Transparent" LastChildFill="True"  >
                    <ContentPresenter Margin="10,0,10,0" DockPanel.Dock="Right" ContentTemplate="{StaticResource ChatDateTime}" DataContext="{Binding}" />
                    <StackPanel Margin="10,0,0,0" DockPanel.Dock="Right" Orientation="Horizontal" Visibility="{Binding IsAnswered, Converter={StaticResource BoolToInvisConverter}}">
                        <Button Style="{StaticResource AcceptButtonCommandStyle}" />
						<Button Style="{StaticResource CancelButtonCommandStyle}" />
                    </StackPanel>
                    <ContentPresenter Margin="10,5,0,7" DockPanel.Dock="Left" ContentTemplate="{StaticResource ChatMessage}" DataContext="{Binding}" />
                </DockPanel>
            </Border>
        </Grid>
	</DataTemplate>

	<!-- Template for rating after support -->
    <DataTemplate DataType="{x:Type rdp:ServiceCompleteChatElement}">
        <Grid>
            <Border Style="{StaticResource SystemMessageBorderStyle}">
                <DockPanel Background="Transparent" LastChildFill="True"  >
                    <Rectangle Margin="10,0,0,0" DockPanel.Dock="Left" Height="50" Width="50" Style="{StaticResource ChatPersonIconStyle}"/>
                    <ContentPresenter Margin="10,0,10,0" DockPanel.Dock="Right" ContentTemplate="{StaticResource ChatDateTime}" DataContext="{Binding}" />
                    <StackPanel Margin="10,0,0,0" DockPanel.Dock="Right">
						<ContentPresenter Margin="0,5,0,0" DockPanel.Dock="Left" ContentTemplate="{StaticResource ChatMessage}" DataContext="{Binding}" />
                        <StackPanel Margin="0,5,0,5" Orientation="Vertical">
							<StackPanel Orientation="Horizontal">
								<TextBlock Style="{DynamicResource ServiceCompleteText}" VerticalAlignment="Top" Width="65"><Run Text="Knowledge"/></TextBlock>
								<engage:RatingControl Name="KnowledgeRating" Margin="10,0,0,0" HorizontalAlignment="Left" Width="75" Height="15" VerticalAlignment="Top" />
							</StackPanel>
							<StackPanel Orientation="Horizontal">
		                        <TextBlock Style="{DynamicResource ServiceCompleteText}" VerticalAlignment="Top" Width="65" HorizontalAlignment="Left" Margin="0,0,0,0"><Run Text="Service"/></TextBlock>
								<engage:RatingControl Name="ServiceRating" Margin="10,0,0,0" HorizontalAlignment="Left" Width="75" Height="15" VerticalAlignment="Top" />
	                        </StackPanel>
                        </StackPanel>
                    </StackPanel>
				</DockPanel>
			</Border>
		</Grid>
    </DataTemplate>

</ResourceDictionary>