<UserControl
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
	mc:Ignorable="d"
	x:Class="BlitsMe.Agent.UI.WPF.Engage.ChatWindow"
	x:Name="UserControl">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Style/ChatStyle.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colours.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
                <ResourceDictionary Source="../Style/Theme.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <SolidColorBrush x:Key="StandardBorderBrush" Color="Transparent" />
            <SolidColorBrush x:Key="StandardBackgroundBrush" Color="#FFF" />
            <SolidColorBrush x:Key="HoverBorderBrush" Color="#DDD" />
            <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="Gray" />
            <SolidColorBrush x:Key="SelectedForegroundBrush" Color="White" />
            <SolidColorBrush x:Key="DisabledForegroundBrush" Color="Transparent" />
            <SolidColorBrush x:Key="NormalBrush" Color="Transparent" />
            <SolidColorBrush x:Key="NormalBorderBrush" Color="Transparent" />
            <SolidColorBrush x:Key="HorizontalNormalBrush" Color="Transparent" />
            <SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="Transparent" />
            <LinearGradientBrush x:Key="ListBoxBackgroundBrush"
            StartPoint="0,0" EndPoint="1,0.001">
                <GradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Color="White" Offset="0.0" />
                        <GradientStop Color="White" Offset="0.6" />
                        <GradientStop Color="#DDDDDD" Offset="1.2"/>
                    </GradientStopCollection>
                </GradientBrush.GradientStops>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="StandardBrush"
            StartPoint="0,0" EndPoint="0,1">
                <GradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Color="#FFF" Offset="0.0"/>
                        <GradientStop Color="#CCC" Offset="1.0"/>
                    </GradientStopCollection>
                </GradientBrush.GradientStops>
            </LinearGradientBrush>
            <SolidColorBrush x:Key="GlyphBrush" Color="#578FD5" />
            <LinearGradientBrush x:Key="PressedBrush"
            StartPoint="0,0" EndPoint="0,1">
                <GradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Color="#BBB" Offset="0.0"/>
                        <GradientStop Color="#EEE" Offset="0.1"/>
                        <GradientStop Color="#EEE" Offset="0.9"/>
                        <GradientStop Color="#FFF" Offset="1.0"/>
                    </GradientStopCollection>
                </GradientBrush.GradientStops>
            </LinearGradientBrush>


            <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="Focusable" Value="false"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border
          Name="Border"
          Margin="1"
          CornerRadius="2"
          Background="{StaticResource NormalBrush}"
          BorderBrush="{StaticResource NormalBorderBrush}"
          BorderThickness="1">
                                <Path
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Fill="{StaticResource GlyphBrush}"
            Data="{Binding Path=Content,
                RelativeSource={RelativeSource TemplatedParent}}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="Border" Property="Background"
                                Value="{StaticResource PressedBrush}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground"
                                Value="{StaticResource DisabledForegroundBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Focusable" Value="false"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border Background="Transparent" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Focusable" Value="false"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border
          CornerRadius="2"
          Background="#8EB4E3"
          BorderBrush="{TemplateBinding BorderBrush}"
          BorderThickness="1" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <ControlTemplate x:Key="VerticalScrollBar"
            TargetType="{x:Type ScrollBar}">
                <Grid >
                    <Grid.RowDefinitions>
                        <RowDefinition MaxHeight="18"/>
                        <RowDefinition Height="0.00001*"/>
                        <RowDefinition MaxHeight="18"/>
                    </Grid.RowDefinitions>
                    <Border
      Grid.RowSpan="3"
      CornerRadius="0"
      Background="Transparent" 
                    BorderBrush="Black"
                    BorderThickness="1"/>
                    <RepeatButton
      Grid.Row="0" Background="White"
      Style="{StaticResource ScrollBarLineButton}"
      Height="18" 
      Command="ScrollBar.LineUpCommand"
      Content="M 0 4 L 8 4 L 4 0 Z" />
                    <Track
      Name="PART_Track"
      Grid.Row="1"
      IsDirectionReversed="true">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageUpCommand" />
                        </Track.DecreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb
          Style="{StaticResource ScrollBarThumb}"
          Margin="1,0,1,0"
          Background="{StaticResource HorizontalNormalBrush}"
          BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
                        </Track.Thumb>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageDownCommand" />
                        </Track.IncreaseRepeatButton>
                    </Track>
                    <RepeatButton
      Grid.Row="3" Background="White"
      Style="{StaticResource ScrollBarLineButton}"
      Height="18"
      Command="ScrollBar.LineDownCommand"
      Content="M 0 0 L 4 4 L 8 0 Z"/>
                </Grid>
            </ControlTemplate>

            <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="Margin" Value="0,0,2,0"/>
                <Style.Triggers>
                    <Trigger Property="Orientation" Value="Horizontal">
                        <Setter Property="Width" Value="12"/>
                        <Setter Property="Height" Value="18" />
                    </Trigger>
                    <Trigger Property="Orientation" Value="Vertical">
                        <Setter Property="Width" Value="12"/>
                        <Setter Property="Height" Value="Auto" />
                        <Setter Property="Template"
                        Value="{StaticResource VerticalScrollBar}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid x:Name="LayoutRoot">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="20"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="10"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="20"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="20"/>
        </Grid.ColumnDefinitions>

        <Grid Grid.Row="0" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <ScrollViewer x:Name="ChatPanelViewer" VerticalScrollBarVisibility="Auto" BorderThickness="5" 
                          BorderBrush="Black" Background="White" d:LayoutOverrides="GridBox" Margin="0,10,0,0"
                          Grid.Row="0">
                <Border BorderThickness="1" BorderBrush="#4A7EBB" MinWidth="350">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="10"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="5"/>
                        </Grid.RowDefinitions>
                        <ItemsControl x:Name="ChatPanel" ItemsSource="{Binding Exchange}" MinWidth="600" Background="White"
                                  Margin="0,5,0,5" Grid.Row="0">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <ContentControl Content="{Binding }">
                                        <ContentControl.Style>
                                            <Style TargetType="{x:Type ContentControl}">
                                                <Setter Property="ContentTemplate" Value="{DynamicResource ChatMeSingle}" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ChatType}" Value="ChatOtherSingle">
                                                        <Setter Property="ContentTemplate" Value="{DynamicResource ChatOtherSingle}" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ChatType}" Value="ChatMeSingle">
                                                        <Setter Property="ContentTemplate" Value="{DynamicResource ChatMeSingle}" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ChatType}" Value="ChatMeGroup">
                                                        <Setter Property="ContentTemplate" Value="{DynamicResource ChatMeGroup}" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ChatType}" Value="ChatOtherGroup">
                                                        <Setter Property="ContentTemplate" Value="{DynamicResource ChatOtherGroup}" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ChatType}" Value="ChatSystem">
                                                        <Setter Property="ContentTemplate" Value="{DynamicResource ChatSystem}" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ChatType}" Value="ChatSystemGroup">
                                                        <Setter Property="ContentTemplate" Value="{DynamicResource ChatSystemGroup}" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ChatType}" Value="ChatSystemError">
                                                        <Setter Property="ContentTemplate" Value="{DynamicResource ChatSystemError}" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ChatType}" Value="ChatServiceComplete">
                                                        <Setter Property="ContentTemplate" Value="{DynamicResource ChatServiceComplete}" />
                                                    </DataTrigger> 
                                                    <DataTrigger Binding="{Binding ChatType}" Value="ChatNotification">
                                                        <Setter Property="ContentTemplate" Value="{DynamicResource ChatNotification}" />
                                                    </DataTrigger> 
                                                    <DataTrigger Binding="{Binding ChatType}" Value="ChatNotificationGroup">
                                                        <Setter Property="ContentTemplate" Value="{DynamicResource ChatNotificationGroup}" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ChatType}" Value="RDPRequestNotification">
                                                        <Setter Property="ContentTemplate" Value="{DynamicResource RDPRequestNotification}" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ChatType}" Value="RDPRequestNotificationGroup">
                                                        <Setter Property="ContentTemplate" Value="{DynamicResource RDPRequestNotificationGroup}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ContentControl.Style>
                                    </ContentControl>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Margin="4,4,4,0" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                        <ItemsControl x:Name="Notifications" Grid.Row="2">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel VerticalAlignment="Bottom" d:LayoutOverrides="VerticalAlignment" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </Grid>
                </Border>
            </ScrollViewer>
        </Grid>

        <Border MinWidth="640" Height="1" BorderThickness="1" BorderBrush="#4A7EBB" Grid.Row="1"
                VerticalAlignment="Center" Grid.Column="1"/>

        <Border BorderThickness="1" BorderBrush="#4A7EBB" Grid.Row="2" Grid.Column="1" 
                MinWidth="550" Margin="0,0,0,0" Background="White">
            <Grid Height="60">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="10"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <!--<Image Margin="8,0,0,8" Source="/BlitsMe.Agent;component/UI/WPF/Images/Thought Bubble Left.png" Height="80" VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="1135">
                    <Image.Effect>
                        <DropShadowEffect/>
                    </Image.Effect>
                </Image>-->
                <!--<Grid x:Name="BubbleCover" Margin="0,0,0,8" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="320" 
                      Background="#FF2B519B" >
                </Grid>-->
                <!--<Image Margin="0,0,62,8" Source="/BlitsMe.Agent;component/UI/WPF/Images/Thought Bubble Right.png" Height="80" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="277">
                    <Image.Effect>
                        <DropShadowEffect/>
                    </Image.Effect>
                </Image>
                <Rectangle x:Name="ImageContainer"
                           
		  Width="50" Height="50" StrokeThickness="0" HorizontalAlignment="Right" Margin="0,0,12,23" VerticalAlignment="Bottom">
                    <Rectangle.Fill>
                        <ImageBrush
			  Stretch="Uniform" ImageSource="{Binding Path=Self.Avatar, Converter={DynamicResource imageStreamReader}}"
			  PresentationOptions:Freeze="True" />
                    </Rectangle.Fill>
                </Rectangle>-->

                <TextBox x:Name="messageBox" BorderThickness="0" SpellCheck.IsEnabled="True" 
                         VerticalScrollBarVisibility="Auto" TextWrapping="Wrap" MinWidth="540"
                         Grid.Column="0" >
                    <TextBox.InputBindings>
                        <KeyBinding Key="Enter" Command="{Binding SendMessage}" />
                    </TextBox.InputBindings>
                </TextBox>
                <Button Width="36" Height="36" Command="{Binding SendMessage}" 
                    Margin="0,0,20,0" Grid.Column="2" Background="Transparent" BorderBrush="Transparent">
                    <Image Source="/BlitsMe.Agent;component/UI/WPF/Images/single chat.png" />
                </Button>
            </Grid>
        </Border>
    </Grid>
</UserControl>