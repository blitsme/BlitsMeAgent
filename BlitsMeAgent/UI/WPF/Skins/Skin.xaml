<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing"
                    xmlns:utils="clr-namespace:BlitsMe.Agent.UI.WPF.Utils"
                    xmlns:s="clr-namespace:System;assembly=mscorlib"
                    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">


    
    <Style x:Key="MainLayout" TargetType="Grid">
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="Background" Value="Transparent" />
    </Style>



    <Style x:Key="WindowMinimizeCloseButtonStyle" TargetType="Button">
        <Setter Property="Height" Value="20"/>
        <Setter Property="Width" Value="20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Button BorderBrush="#FF25A0DB"  Style="{DynamicResource WindowMinimizeCloseButtonChromeStyle}"/>
                        <ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WindowMinimizeCloseButtonChromeStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="OuterBorder" BorderBrush="{TemplateBinding BorderBrush}"  Background="Transparent"  >
                            <Border x:Name="InnerBorder" />
                        </Border>
                        <Border x:Name="MouseOverVisual" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"  Opacity="0" Visibility="Collapsed" >
                            <Border x:Name="MouseOverInnerVisual"  />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="MouseOverVisual">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverVisual">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.115" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="MouseOverVisual">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.15">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverVisual">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.15" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ClosePathStyle" TargetType="{x:Type Path}">
        <Setter Property="Data" Value="M1.5,3.5L2.5,2.5 4.5,2.5 6.5,4.5 8.5,2.5 10.5,2.5 11.5,3.5 8.5,6.5 8.5,7.5 11.5,10.5 10.5,11.5 8.5,11.5 6.5,9.5 4.5,11.5 2.5,11.5 1.5,10.5 4.5,7.5 4.5,6.5z"/>
        <Setter Property="Height" Value="14"/>
        <Setter Property="Fill" Value="Red"/>
        <Setter Property="Width" Value="14"/>
    </Style>

    <Style x:Key="PersonBorder" TargetType="Border">
        <Setter Property="CornerRadius" Value="6" />
        <Setter Property="Background" Value="#FFB9CDE5" />
        <Setter Property="BorderThickness" Value="1,1,1,1"  />
        <Setter Property="Padding" Value="5" />
    </Style>

    <Style x:Key="TextboxSearchStyle" TargetType="TextBox">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Width" Value="100" />
        <Setter Property="Height" Value="20" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />

    </Style>

    <Style x:Key="NormalTextboxStyle" TargetType="TextBox">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Width" Value="164" />
        <Setter Property="Height" Value="23" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <Style x:Key="NormalTextblockBlackStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontSize" Value="12"/>
    </Style>

    <Style x:Key="NormalPasswordBoxStyle" TargetType="PasswordBox">
        <Setter Property="Width" Value="164" />
        <Setter Property="Height" Value="23" />
    </Style>

    <Style x:Key="TextblockHeaderStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#95B3D7" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="24" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FontWeight" Value="Bold" />
    </Style>

    <Style x:Key="TextblockHeaderActiveStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#95B3D7" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="26" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FontWeight" Value="Bold" />
    </Style>

    <Style x:Key="UserinfoBtnstyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#B9CDE5" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Height" Value="22" />
        <Setter Property="SnapsToDevicePixels" Value="True" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="0" Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" 
                                              VerticalAlignment="Center" Margin="0,0,0,0" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#4A7EBB" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#B9CDE5" />
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SaveChangesBtn" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#DCE6F2" />
        <Setter Property="BorderBrush" Value="#5574AF"/>
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Height" Value="22" />
        <Setter Property="Width" Value="75"/>
        <Setter Property="SnapsToDevicePixels" Value="True" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="0" Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" 
                                              VerticalAlignment="Center" Margin="0,0,0,0" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#4A7EBB" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#B9CDE5" />
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate TargetType="{x:Type Button}" x:Key="TransparentButtonStyle">
        <Button BorderBrush="Transparent" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" 
                HorizontalAlignment="Center" VerticalAlignment="Center" Width="30" Height="27" >
            <Button.Content>
                <StackPanel Orientation="Horizontal">
                    <Border CornerRadius="3">
                        <ContentPresenter/>
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="Background" Value="Transparent" />
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="Gray" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </StackPanel>
            </Button.Content>
            <Button.Style>
                <Style TargetType="{x:Type Button}" >
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}" >
                                <ContentPresenter />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
        </Button>
    </ControlTemplate>

    <ControlTemplate TargetType="{x:Type Button}" x:Key="TransparentButtonProgressCloseStyle">
        <Button BorderBrush="Transparent" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" 
                HorizontalAlignment="Center" VerticalAlignment="Center" >
            <Button.Content>
                <StackPanel Orientation="Horizontal">
                    <Border CornerRadius="3">
                        <ContentPresenter/>
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="Background" Value="Transparent" />
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="Transparent" />
                                        <Setter Property="BorderBrush" Value="Gray" />
                                        <Setter Property="BorderThickness" Value="1" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </StackPanel>
            </Button.Content>
            <Button.Style>
                <Style TargetType="{x:Type Button}" >
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}" >
                                <ContentPresenter />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
        </Button>
    </ControlTemplate>

    <ControlTemplate TargetType="{x:Type Button}" x:Key="TransparentButtonDeleteStyle">
        <Button BorderBrush="Transparent" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" 
                HorizontalAlignment="Center" VerticalAlignment="Center" >
            <Button.Content>
                <StackPanel Orientation="Horizontal">
                    <Border CornerRadius="3">
                        <ContentPresenter/>
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="Background" Value="Transparent" />
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="Transparent" />
                                        <Setter Property="BorderBrush" Value="Gray" />
                                        <Setter Property="BorderThickness" Value="1" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </StackPanel>
            </Button.Content>
            <Button.Style>
                <Style TargetType="{x:Type Button}" >
                    <Setter Property="Command" Value="{Binding DeleteNotification}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}" >
                                <ContentPresenter />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
        </Button>
    </ControlTemplate>

    <ControlTemplate TargetType="{x:Type Button}" x:Key="TransparentButtonTerminateRDP">
        <Button BorderBrush="Transparent" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" 
                HorizontalAlignment="Center" VerticalAlignment="Center" >
            <Button.Content>
                <StackPanel Orientation="Horizontal">
                    <Border CornerRadius="3">
                        <ContentPresenter/>
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="Background" Value="Transparent" />
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="Transparent" />
                                        <Setter Property="BorderBrush" Value="Gray" />
                                        <Setter Property="BorderThickness" Value="1" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </StackPanel>
            </Button.Content>
            <Button.Style>
                <Style TargetType="{x:Type Button}" >
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}" >
                                <ContentPresenter />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Command" Value="{Binding AnswerCancel}" />
                    <Setter Property="ContentTemplate" Value="{DynamicResource DenyButtonTemplate}" />
                    <Setter Property="ToolTip" Value="Terminate RDP session" />
                </Style>
            </Button.Style>
        </Button>
    </ControlTemplate>

    <ControlTemplate TargetType="{x:Type Button}" x:Key="TransparentButtonFileSendCloseStyle">
        <Button BorderBrush="Transparent" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" 
                HorizontalAlignment="Center" VerticalAlignment="Center" >
            <Button.Content>
                <StackPanel Orientation="Horizontal">
                    <Border CornerRadius="3">
                        <ContentPresenter/>
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="Background" Value="Transparent" />
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="Transparent" />
                                        <Setter Property="BorderBrush" Value="Gray" />
                                        <Setter Property="BorderThickness" Value="1" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </StackPanel>
            </Button.Content>
            <Button.Style>
                <Style TargetType="{x:Type Button}" >
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}" >
                                <ContentPresenter />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Grid}}, Path=DataContext.AnswerTrueFalse}" />
                    <Setter Property="CommandParameter">
                        <Setter.Value>
                            <s:Boolean>False</s:Boolean>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="ContentTemplate" Value="{DynamicResource DenyButtonTemplate}" />
                    <Setter Property="ToolTip" Value="Deny" />
                </Style>
            </Button.Style>
        </Button>
    </ControlTemplate>

    <ControlTemplate TargetType="{x:Type Button}" x:Key="TransparentButtonFileSendAcceptStyle">
        <Button BorderBrush="Transparent" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" 
                HorizontalAlignment="Center" VerticalAlignment="Center" >
            <Button.Content>
                <StackPanel Orientation="Horizontal">
                    <Border CornerRadius="3">
                        <ContentPresenter/>
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="Background" Value="Transparent" />
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="Transparent" />
                                        <Setter Property="BorderBrush" Value="Gray" />
                                        <Setter Property="BorderThickness" Value="1" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </StackPanel>
            </Button.Content>
            <Button.Style>
                <Style TargetType="{x:Type Button}" >
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}" >
                                <ContentPresenter />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Grid}}, Path=DataContext.AnswerTrueFalse}" />
                    <Setter Property="CommandParameter">
                        <Setter.Value>
                            <s:Boolean>True</s:Boolean>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="ContentTemplate" Value="{DynamicResource AcceptButtonTemplate}" />
                    <Setter Property="ToolTip" Value="Accept" />
                </Style>
            </Button.Style>
        </Button>
    </ControlTemplate>

    <ControlTemplate TargetType="{x:Type Button}" x:Key="TransparentButtonNotificationCloseStyle">
        <Button BorderBrush="Transparent" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" 
                HorizontalAlignment="Center" VerticalAlignment="Center" >
            <Button.Content>
                <StackPanel Orientation="Horizontal">
                    <Border CornerRadius="3">
                        <ContentPresenter/>
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="Background" Value="Transparent" />
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="Transparent" />
                                        <Setter Property="BorderBrush" Value="Gray" />
                                        <Setter Property="BorderThickness" Value="1" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </StackPanel>
            </Button.Content>
            <Button.Style>
                <Style TargetType="{x:Type Button}" >
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}" >
                                <ContentPresenter />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Command" Value="{Binding AnswerTrueFalse}" />
                    <Setter Property="CommandParameter">
                        <Setter.Value>
                            <s:Boolean>False</s:Boolean>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="ContentTemplate" Value="{DynamicResource DenyButtonTemplate}" />
                    <Setter Property="ToolTip" Value="Deny" />
                </Style>
            </Button.Style>
        </Button>
    </ControlTemplate>

    <ControlTemplate TargetType="{x:Type Button}" x:Key="TransparentButtonNotificationAcceptStyle">
        <Button BorderBrush="Transparent" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" 
                HorizontalAlignment="Center" VerticalAlignment="Center" >
            <Button.Content>
                <StackPanel Orientation="Horizontal">
                    <Border CornerRadius="3">
                        <ContentPresenter/>
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="Background" Value="Transparent" />
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="Transparent" />
                                        <Setter Property="BorderBrush" Value="Gray" />
                                        <Setter Property="BorderThickness" Value="1" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </StackPanel>
            </Button.Content>
            <Button.Style>
                <Style TargetType="{x:Type Button}" >
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}" >
                                <ContentPresenter />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Command" Value="{Binding AnswerTrueFalse}" />
                    <Setter Property="CommandParameter">
                        <Setter.Value>
                            <s:Boolean>True</s:Boolean>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="ContentTemplate" Value="{DynamicResource AcceptButtonTemplate}" />
                    <Setter Property="ToolTip" Value="Accept" />
                </Style>
            </Button.Style>
        </Button>
    </ControlTemplate>

    <Style x:Key="TeamMemberNameText" TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="FontWeight" Value="DemiBold" />
    </Style>

    <Style x:Key="TeamMemberLocationText" TargetType="TextBlock" BasedOn="{StaticResource TeamMemberNameText}">
    </Style>

    <Style x:Key="TeamMemberStarEmpty" TargetType="ed:RegularPolygon">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="InnerRadius" Value="0.47211"  />
        <Setter Property="PointCount" Value="5"  />
        <Setter Property="Stretch" Value="Fill"  />
        <Setter Property="Width" Value="13"  />
        <Setter Property="Stroke" Value="Black"  />
        <Setter Property="Height" Value="13"/>
    </Style>

    <Style x:Key="TeamMemberStarFull" TargetType="ed:RegularPolygon" BasedOn="{StaticResource TeamMemberStarEmpty}">
        <Setter Property="Fill" Value="Black" />
    </Style>

    <Style x:Key="TeamMemberStarCover" TargetType="Rectangle">
        <Setter Property="Fill" Value="#FF2B519B" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="HorizontalAlignment" Value="Right" />
    </Style>

    <utils:StarRatingConverter x:Key="starRatingConverter" />
    <DataTemplate x:Key="Rating">
        <Grid Margin="0,0,0,0" Height="15" HorizontalAlignment="Center">
            <ed:RegularPolygon Style="{StaticResource TeamMemberStarFull}" Margin="0,0,0,0" />
            <ed:RegularPolygon Style="{StaticResource TeamMemberStarFull}" Margin="15,0,0,0" />
            <ed:RegularPolygon Style="{StaticResource TeamMemberStarFull}" Margin="30,0,0,0" />
            <ed:RegularPolygon Style="{StaticResource TeamMemberStarFull}" Margin="45,0,0,0" />
            <ed:RegularPolygon Style="{StaticResource TeamMemberStarFull}" Margin="60,0,0,0" />
            <Rectangle Style="{StaticResource TeamMemberStarCover}" Width="{Binding FallbackValue=25, Converter={StaticResource starRatingConverter}}" />
            <!--<ed:RegularPolygon Style="{StaticResource TeamMemberStarCover}" Margin="60,0,0,0" />-->
            <ed:RegularPolygon Style="{StaticResource TeamMemberStarEmpty}" Margin="0,0,0,0" />
            <ed:RegularPolygon Style="{StaticResource TeamMemberStarEmpty}" Margin="15,0,0,0" />
            <ed:RegularPolygon Style="{StaticResource TeamMemberStarEmpty}" Margin="30,0,0,0" />
            <ed:RegularPolygon Style="{StaticResource TeamMemberStarEmpty}" Margin="45,0,0,0" />
            <ed:RegularPolygon Style="{StaticResource TeamMemberStarEmpty}" Margin="60,0,0,0" />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="Unrated">
        <Grid Margin="0,0,0,0" Height="15" HorizontalAlignment="Center">
            <TextBlock Foreground="Black">Unrated</TextBlock>
        </Grid>
    </DataTemplate>

    <Style x:Key="ProspectDescription" TargetType="{x:Type TextBlock}">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Foreground" Value="Gray" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>
</ResourceDictionary>
